// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/ryanjyoder/ble-wifi-config/connectivity (interfaces: ConnectivityService)

// Package connectivity is a generated GoMock package.
package connectivity

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockConnectivityService is a mock of ConnectivityService interface.
type MockConnectivityService struct {
	ctrl     *gomock.Controller
	recorder *MockConnectivityServiceMockRecorder
}

// MockConnectivityServiceMockRecorder is the mock recorder for MockConnectivityService.
type MockConnectivityServiceMockRecorder struct {
	mock *MockConnectivityService
}

// NewMockConnectivityService creates a new mock instance.
func NewMockConnectivityService(ctrl *gomock.Controller) *MockConnectivityService {
	mock := &MockConnectivityService{ctrl: ctrl}
	mock.recorder = &MockConnectivityServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockConnectivityService) EXPECT() *MockConnectivityServiceMockRecorder {
	return m.recorder
}

// IsConnectedToInternet mocks base method.
func (m *MockConnectivityService) IsConnectedToInternet(arg0 context.Context) (bool, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "IsConnectedToInternet", arg0)
	ret0, _ := ret[0].(bool)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// IsConnectedToInternet indicates an expected call of IsConnectedToInternet.
func (mr *MockConnectivityServiceMockRecorder) IsConnectedToInternet(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "IsConnectedToInternet", reflect.TypeOf((*MockConnectivityService)(nil).IsConnectedToInternet), arg0)
}

// NotifyInternetChange mocks base method.
func (m *MockConnectivityService) NotifyInternetChange(arg0 NotifyCallback) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "NotifyInternetChange", arg0)
}

// NotifyInternetChange indicates an expected call of NotifyInternetChange.
func (mr *MockConnectivityServiceMockRecorder) NotifyInternetChange(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "NotifyInternetChange", reflect.TypeOf((*MockConnectivityService)(nil).NotifyInternetChange), arg0)
}
